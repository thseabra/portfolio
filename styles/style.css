@import url('https://fonts.googleapis.com/css2?family=Krona+One&family=Montserrat:wght@400;600&display=swap');

:root {
    --cor-primaria: #113946; 
    --cor-secundaria: #BCA37F;
    --cor-terciaria:  #EAD7BB;
    --cor-quaternaria: #FFF2D8;

    --fonte-primaria: 'Krona One', sans-serif;
    --fonte-secundaria: 'Montserrat', sans-serif;
}

/* selecionar texto e apertar 'ctrl + D' faz mudar tudo de uma vez */

* { /* o asterisco captura TODOS os elementos da página || técnica de Reset CSS */
    margin: 0; /* margin = margem */
    padding: 0; /* padding = preenchimento | fica entre o conteúdo e a borda */ 
    /* O Padding é responsável por definir a distância entre um conteúdo e suas bordas. */

}

body {
    /* height: 100vh; /* /* altura | 100% do vh (viewport height) */
    box-sizing: border-box; /* o border-box informa ao navegador para contabilizar qualquer borda 
    e preenchimento nos valores especificados para a largura e a altura de um elemento. */
    background-color: var(--cor-primaria);
    color: var(--cor-secundaria); /* cor do texto */
}

.cabecalho {
    padding: 2% 0% 0% 15%; /*ORDEM DE PREENCHIMENTO: SUPERIOR - DIREITO - INFERIOR - ESQUERDO */
}

.cabecalho__menu {
    display: flex;
    gap: 30px;
}

.cabecalho__menu__link {
    font-family: var(--fonte-secundaria);
    font-size: 1.5rem; /*divide o pixel por 16 || 22px/16 = 1.5rem */
    font-weight: 600;
    color: var(--cor-secundaria);
    text-decoration: none;
    transition: all 1s;
}

.cabecalho__menu__link:hover {
    font-size: 1.6rem;

}

.apresentacao {
    padding: 5% 15%; /* O Padding é responsável por definir a distância entre um conteúdo e suas bordas. */
    display: flex; /* estrutura padrão do Flexbox || Ao definir o valor da propriedade display de um elemento como flex, criamos um contêiner flex, ou seja, passamos a utilizar o Flexbox. 
    A partir desse ponto, todos os elementos que estão dentro do contêiner são chamados de elementos-filhos e apresentarão comportamentos padronizados.*/
    align-items: center;
    justify-content: space-between; /* comando responsável por justificar, 
    formatando o posicionamento de acordo com o requisito do desenvolvedor. */
    gap: 84px;
}

.apresentacao__conteudo {
    width: 50%;
    display: flex; /* Ao definir o valor da propriedade display de um elemento como flex, criamos um contêiner flex, ou seja, passamos a utilizar o Flexbox. 
    A partir desse ponto, todos os elementos que estão dentro do contêiner são chamados de elementos-filhos e apresentarão comportamentos padronizados. */
    flex-direction: column;
    gap: 40px; /*  Ela especifica no CSS o tamanho dos espaços entre linhas e colunas em layouts de grid, flex e multi-column. 
    Sua sintaxe é bem simples e ela aceita um ou dois valores. */
}

.apresentacao__conteudo__titulo {
    font-size: 1.7rem;
    font-family: var(--fonte-primaria);
}

.tituloDestaque {
    color: var(--cor-terciaria);
}

.apresentacao__conteudo__texto {
    font-size: 1.5rem;
    font-family: var(--fonte-secundaria);
}

.apresentacao__links {
    display: flex; /* Ao definir o valor da propriedade display de um elemento como flex, criamos um contêiner flex, ou seja, passamos a utilizar o Flexbox. A partir desse ponto, todos os elementos que estão dentro do contêiner são chamados de elementos-filhos e apresentarão comportamentos padronizados. */
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 32px;
}

.apresentacao__links__navegacao {
    transition: all 1.5s;
    display: flex;
    justify-content: center;
    gap: 16px;
    border: 5px solid var(--cor-terciaria);
    color: var(--cor-secundaria);
    font-family: var(--fonte-secundaria);
    font-weight: 600;
    width: 50%;
    text-align: center;
    border-radius: 8px;
    font-size: 1.5rem;
    padding: 21.5px 0; /* O primeiro valor é do eixo VERTICAL. O segundo valor é do eixo HORIZONTAL */ 
    /* O Padding é responsável por definir a distância entre um conteúdo e suas bordas. */
    text-decoration: none;
    align-items: center;
}

.apresentacao__links__navegacao:hover { /* HOVER ::: TUDO que estiver aqui dentro será estilizado quando o mouse passar por cima */
    background-color: var(--cor-terciaria);
    width: 70%;
    color: var(--cor-primaria);
}

.apresentacao__links__subtitulo {
    font-family: var(--fonte-primaria);
    font-weight: 400;
    font-size: 1.5rem;
}

.apresentacao__imagem {
    align-self: flex-start;
    width: 40%;
}

.rodape {
    background-color: var(--cor-quaternaria);
    font-family: var(--fonte-secundaria);
    color: var(--cor-primaria);
    padding: 1.5rem;
    text-align: center;
    font-weight: 400;
}

@media (max-width: 1100px) {
    
    .cabecalho {
        padding: 10% 10% 5% 10%;
        
    }
    
    .cabecalho__menu {
        justify-content: center;
    }

    .apresentacao {
        flex-direction: column-reverse;
        padding: 5%; /*Quando se coloca apenas uma porcentagem, ele altera todos os lados (CIMA, BAIXO, ESQUERDA, DIREITA) */
    }

    .apresentacao__conteudo {
        width: 100%; /* propriedade AUTO diz: "você tem esse esse espaço e esse é o padding; ocupe esse espaço" */
    }

    .apresentacaoCurriculo {
        flex-direction: column;
        width: auto;
    }
    
    .apresentacao__imagem {
        align-self: center;
    }
}

@media (max-width: 280px) {
    
    .cabecalho__menu {
        justify-content: center;
        gap: 11px;
    }
}




/* ///////////////////////////////////////CURRÍCULO//////////////////////////////////////////////////////// */

.apresentacaoCurriculo {
    padding: 5% 15%; /* O Padding é responsável por definir a distância entre um conteúdo e suas bordas. */
    display: flex; /* estrutura padrão do Flexbox || Ao definir o valor da propriedade display de um elemento como flex, criamos um contêiner flex, ou seja, passamos a utilizar o Flexbox. 
    A partir desse ponto, todos os elementos que estão dentro do contêiner são chamados de elementos-filhos e apresentarão comportamentos padronizados.*/
    align-items: center;
    justify-content: space-between; /* comando responsável por justificar, 
    formatando o posicionamento de acordo com o requisito do desenvolvedor. */
    gap: 40px;
}

.apresentacao__conteudo {
    font-family: var(--fonte-primaria);
    font-size: 149%;
}

.AluraCursos {
    text-decoration: none;
    color: var(--cor-terciaria);
}

.imagens {
    display: flex;
    flex-direction: column;
    gap: 55px;
}

.fotoCodigo1 {
    padding-top: 12%;
}

/* 479 252*/